<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Web</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/StyleSheet.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Web.styles.css" asp-append-version="true" />

    <style>

        .sidebar {
        min-height: 100vh;
        background-color: #f8f9fa;
        border-right: 1px solid #ddd;
        }

        .sidebar .nav-link {
        color: #333;
        }

        .sidebar .nav-link:hover {
        background-color: #e9ecef;
        }

        .loader {
        height: 60px;
        aspect-ratio: 1;
        position: relative;
        }

        .loader::before,
        .loader::after {
        content: "";
        position: absolute;
        inset: 0;
        border-radius: 50%;
        transform-origin: bottom;
        }

        .loader::after {
        background: radial-gradient(at 75% 15%,#fffb,#0000 35%), radial-gradient(at 80% 40%,#0000,#0008), radial-gradient(circle 5px,#fff 94%,#0000), radial-gradient(circle 10px,#000 94%,#0000), linear-gradient(#F93318 0 0) top/100% calc(50% - 5px), linear-gradient(#fff 0 0) bottom/100% calc(50% - 5px) #000;
        background-repeat: no-repeat;
        animation: l20 1s infinite cubic-bezier(0.5,120,0.5,-120);
        }

        .loader::before {
        background: #ddd;
        filter: blur(8px);
        transform: scaleY(0.4) translate(-13px, 0px);
        }

        @@keyframes l20 {
        30%, 70% {
        transform: rotate(0deg);
        }

        49.99% {
        transform: rotate(0.2deg);
        }

        50% {
        transform: rotate(-0.2deg);
        }
        }
    </style>
</head>
<body style="backdrop-filter: blur(2px)">
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-2 sidebar p-3">
                @{
                    var role = User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Role)?.Value;
                }
                @if (role == "1")
                {
                    <h5 class="mb-4">Quản trị</h5>
                }
                else if (role == "2")
                {
                    <h5 class="mb-4">Giảng viên</h5>
                }
                else if (role == "3")
                {
                    <h5 class="mb-4">Sinh viên</h5>
                }
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active-flame" : "")"
                        asp-controller="Home" asp-action="Index">🏠 Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Users" ? "active-flame" : "")"
                        asp-controller="Users" asp-action="Index">👤 Danh sách người dùng</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Statistical" ? "active-flame" : "")"
                        asp-controller="Statistical" asp-action="DashBoard">📊 Thống kê</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Student" ? "active-flame" : "")"
                        asp-controller="Student" asp-action="Index">🎓 Danh sách sinh viên</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Scheduless" ? "active-flame" : "")"
                        asp-controller="Scheduless" asp-action="Index">📅 Lịch học</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "SubjectW" ? "active-flame" : "")"
                        asp-controller="SubjectW" asp-action="Index">📘 Khoai môn</a>
                    </li>
                    @if (User.HasClaim("Permission", "AddRole"))
                    {
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Roles" ? "active-flame" : "")"
                           asp-controller="Roles" asp-action="Index">👤 Phân quyền người dùng</a>
                    </li>                        
                    }
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "ClassMvc" ? "active-flame" : "")"
                           asp-controller="ClassMvc" asp-action="Index">Class</a>
                    </li>

                    <hr />

                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="dropdown me-3">
                            <button class="btn btn-light dropdown-toggle" type="button" id="userMenu" data-bs-toggle="dropdown" aria-expanded="false">
                                👋 Xin chào, @User.Identity?.Name
                            </button>
                            <ul aria-labelledby="userMenu" class="nav flex-column">
                                <li>
                                    <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "IndexUser" ? "active-flame" : "")"
                                       asp-controller="Users" asp-action="IndexUser">👤 Hồ sơ cá nhân</a>
                                </li>
                                <li>
                                    <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "IndexLog" ? "active-flame" : "")"
                                       asp-controller="Users" asp-action="IndexLog">🕓 Lịch sử hoạt động</a>
                                </li>
                            </ul>
                        </div>
                    }
                    else
                    {
                        <a class="btn btn-outline-primary btn-sm" asp-controller="Users" asp-action="Login">Đăng nhập</a>
                    }

                    <hr />
                    <li>
                        <form method="post" asp-controller="Users" asp-action="Logout" class="dropdown-item p-0 m-0">
                            <button type="submit" class="btn btn-link w-100 text-start px-3 py-2">🚪 Đăng xuất</button>
                        </form>
                    </li>
                </ul>

            </div>

            <!-- Content -->
            <div class="col-md-10 pt-3">
                @RenderBody()
            </div>
        </div>
    </div>

    <!-- Loader -->
    <div id="page-loader" class="loader my-4 position-fixed top-50 start-50 translate-middle" style="z-index: 1050;"></div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        const loader = document.getElementById("page-loader");

        window.addEventListener("load", () => {
            if (loader) loader.style.display = "none";
        });

        document.addEventListener("DOMContentLoaded", () => {
            const links = document.querySelectorAll("a.nav-link, a.btn, a[href]");
            links.forEach(link => {
                link.addEventListener("click", (e) => {
                    const href = link.getAttribute("href");
                    const isExternal = href && (href.startsWith("http") || href.startsWith("mailto:") || href.startsWith("#"));
                    const target = link.getAttribute("target");
                    if (!isExternal && !target) {
                        loader.style.display = "block";
                    }
                });
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
