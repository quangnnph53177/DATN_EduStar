@model IEnumerable<API.ViewModel.AuditLogViewModel>

@{
    ViewData["Title"] = "Audit Log";
}

<h1 class="mt-4 mb-4 text-primary">Audit Log</h1>

<table class="table table-bordered table-striped table-hover">
    <thead class="table-dark text-center">
        <tr>
            <th style="width: 5%">ID</th>
            <th style="width: 12%">User Name</th>
            <th style="width: 8%">Active</th>
            <th style="width: 20%">Old Data</th>
            <th style="width: 20%">New Data</th>
            <th style="width: 15%">Performed By</th>
            <th style="width: 15%">Timestamp</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="text-center">@item.Id</td>
                <td>@item.UserName</td>
                <td class="text-center">@item.Active</td>
                <td class="text-center">
                    <button type="button" class="btn btn-sm btn-info" onclick="toggleJson('oldData_@item.Id')">Xem</button>
                    <div id="oldData_@item.Id" class="formatted-json-table mt-2 d-none" data-json="@Html.Raw(Html.Encode(item.OldData))"></div>
                </td>

                <td class="text-center">
                    <button type="button" class="btn btn-sm btn-success" onclick="toggleJson('newData_@item.Id')">Xem</button>
                    <div id="newData_@item.Id" class="formatted-json-table mt-2 d-none" data-json="@Html.Raw(Html.Encode(item.NewData))"></div>
                </td>


                <td>@item.PerformeByName</td>
                <td>@item.Timestamp</td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    <script>
        function toggleJson(id) {
            const container = document.getElementById(id);

            if (!container) return;

            if (container.classList.contains('d-none')) {
                // Lần đầu hiển thị thì render JSON
                if (!container.innerHTML.trim()) {
                    try {
                        const jsonString = container.getAttribute("data-json");
                        const json = JSON.parse(jsonString);

                        let html = '<table class="table table-bordered table-sm">';
                        html += '<thead class="table-light"><tr><th>Trường</th><th>Giá trị</th></tr></thead><tbody>';

                        for (const key in json) {
                            if (!json.hasOwnProperty(key)) continue;

                            let value = json[key];
                            const lowerKey = key.toLowerCase();

                            if ((lowerKey.includes("image") || lowerKey.includes("avatar") || lowerKey.includes("photo")) &&
                                typeof value === "string" &&
                                (value.startsWith("http") || value.startsWith("/"))) {
                                value = `<img src="${value}" alt="${key}" style="max-height: 150px;">`;
                            }

                            html += `<tr><td>${key}</td><td>${value}</td></tr>`;
                        }

                        html += '</tbody></table>';
                        container.innerHTML = html;
                    } catch (err) {
                        container.innerHTML = '<p class="text-danger">Không thể hiển thị dữ liệu (không phải JSON hợp lệ).</p>';
                    }
                }

                container.classList.remove('d-none');
            } else {
                container.classList.add('d-none');
            }
        }
    </script>
}
