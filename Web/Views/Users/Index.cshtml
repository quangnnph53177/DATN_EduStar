  @model API.ViewModel.PagedResult<API.ViewModel.UserDTO>

@{
    ViewData["Title"] = "Danh sách người dùng";
}

<h2>Danh sách người dùng</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (User.HasClaim("Permission", "Create"))
{
    <a asp-controller="Users" asp-action="Register" class="btn btn-primary mb-3">Thêm người dùng</a>
}
@if (User.HasClaim("Permission", "Search"))
{
    <form method="get" asp-action="SearchUS" class="mb-3 d-flex">
        <input type="text" name="keyword" class="form-control me-2" placeholder="Nhập từ khóa tìm kiếm" />
        <button type="submit" class="btn btn-primary">Tìm kiếm</button>
        <a asp-action="Index" class="btn btn-secondary ms-2">Làm mới</a>
    </form>
}
<div class="row">
            @foreach (var user in Model.Items)
            {
                <div class="col-md-3 mb-4">
                    <div class="card h-100 shadow-sm">
                        @if (!string.IsNullOrEmpty(user.Avatar))
                        {
                            <img src="https://localhost:7298/@user.Avatar" class="card-img-top" alt="Avatar" style="height: 200px; object-fit: cover;" />
                        }
                        else
                        {
                            <img src="https://via.placeholder.com/200x200?text=No+Avatar" class="card-img-top" alt="No Avatar" style="height: 200px; object-fit: cover;" />
                        }
                        <div class="card-body">
                            <h5 class="card-title">@user.FullName</h5>
                            <p class="card-text">
                                <strong>UserName:</strong> @user.UserName <br />
                                <strong>Email:</strong> @user.Email <br />
                                <strong>Student Code:</strong> @user.UserCode <br />
                                <strong>Vai trò:</strong> @string.Join(", ", user.RoleIds ?? new List<int>())<br />
                                <strong>Trạng thái hoạt động:</strong>
                                <span class="badge bg-@(user.Statuss ? "success" : "secondary")">
                                    @(user.Statuss ? "Hoạt động" : "Đã khóa")
                                </span><br />
                             </p>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-center">
                        <a asp-controller="Users" asp-action="IndexUser" asp-route-username="@user.UserName" class="btn btn-outline-secondary btn-sm small mx-1 mb-1">🔍</a>
                        @if (User.HasClaim("Permission", "Create"))
                                {
                            <a asp-controller="Users" asp-action="UpdateUser" asp-route-username="@user.UserName" class="btn btn-outline-secondary btn-sm small mx-1 mb-1">✏️ </a>
                            <a asp-controller="Users" asp-action="ChangeRole" asp-route-username="@user.UserName" class="btn btn-outline-secondary btn-sm small mx-1 mb-1">🔄</a>
                                    <form asp-controller="Users" asp-action="LockUser" asp-route-username="@user.UserName" method="post" onsubmit="return confirm('Bạn có chắc chắn muốn thay đổi trạng thái?');" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-sm small mx-1 mb-1 @(user.Statuss ? "btn-danger" : "btn-success")">
                                    @(user.Statuss ? "🔒" : "🔓 ")
                                        </button>
                                    </form>

                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
</div>

<div class="d-flex justify-content-between">
    <span>Trang @Model.PageIndex / @Model.TotalPages</span>
    <div>
        @if (Model.HasPreviousPage)
        {
            <a class="btn btn-outline-primary btn-sm" href="?page=@(Model.PageIndex - 1)">« Trước</a>
        }
        @if (Model.HasNextPage)
        {
            <a class="btn btn-outline-primary btn-sm" href="?page=@(Model.PageIndex + 1)">Sau »</a>
        }
    </div>
</div>