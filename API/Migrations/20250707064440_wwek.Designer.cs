// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AduDbcontext))]
    [Migration("20250707064440_wwek")]
    partial class wwek
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Endtime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SchedulesId")
                        .HasColumnType("int");

                    b.Property<string>("SessionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Starttime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Attendan__3214EC076DAB41EB");

                    b.HasIndex(new[] { "SchedulesId" }, "IX_Attendance_SchedulesId");

                    b.HasIndex(new[] { "UserId" }, "IX_Attendance_UserId");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("API.Models.AttendanceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckinTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Attendan__3214EC07676DEB47");

                    b.HasIndex(new[] { "AttendanceId" }, "IX_AttendanceDetails_AttendanceId");

                    b.HasIndex(new[] { "StudentId" }, "IX_AttendanceDetails_StudentId");

                    b.ToTable("AttendanceDetails");
                });

            modelBuilder.Entity("API.Models.AttendanceDetailsComplaint", b =>
                {
                    b.Property<int>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<int?>("SchedulesId")
                        .HasColumnType("int");

                    b.HasKey("ComplaintId")
                        .HasName("PK__Attendan__740D898FC96B649B");

                    b.HasIndex(new[] { "SchedulesId" }, "IX_AttendanceDetailsComplaints_SchedulesId");

                    b.ToTable("AttendanceDetailsComplaints");
                });

            modelBuilder.Entity("API.Models.Auditlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PerformeBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__auditlog__3214EC074C8DE149");

                    b.HasIndex(new[] { "PerformeBy" }, "IX_auditlog_PerformeBy");

                    b.HasIndex(new[] { "Userid" }, "IX_auditlog_Userid");

                    b.ToTable("auditlog", (string)null);
                });

            modelBuilder.Entity("API.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameClass")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("Semester")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("YearSchool")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Classes__3214EC07EDA37A0C");

                    b.HasIndex(new[] { "SubjectId" }, "IX_Classes_SubjectId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("API.Models.ClassChange", b =>
                {
                    b.Property<int>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentClassId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestedClassId")
                        .HasColumnType("int");

                    b.HasKey("ComplaintId")
                        .HasName("PK__ClassCha__740D898F5A03A251");

                    b.HasIndex(new[] { "CurrentClassId" }, "IX_ClassChange_CurrentClassId");

                    b.HasIndex(new[] { "RequestedClassId" }, "IX_ClassChange_RequestedClassId");

                    b.ToTable("ClassChange", (string)null);
                });

            modelBuilder.Entity("API.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComplaintType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProcessedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProofUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statuss")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Complain__3214EC076F183F2B");

                    b.HasIndex(new[] { "ProcessedBy" }, "IX_Complaints_ProcessedBy");

                    b.HasIndex(new[] { "StudentId" }, "IX_Complaints_StudentId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("API.Models.DayOfWeekk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Weekdays")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__DayOfWeek__3214EC079A470A2D");

                    b.ToTable("DayOfWeeks");
                });

            modelBuilder.Entity("API.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Permissi__3214EC07B10A1991");

                    b.ToTable("Permission", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PermissionName = "Create"
                        },
                        new
                        {
                            Id = 2,
                            PermissionName = "Detail"
                        },
                        new
                        {
                            Id = 3,
                            PermissionName = "Edit"
                        },
                        new
                        {
                            Id = 4,
                            PermissionName = "Search"
                        },
                        new
                        {
                            Id = 5,
                            PermissionName = "ProcessComplaint"
                        },
                        new
                        {
                            Id = 6,
                            PermissionName = "AddRole"
                        });
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC0791E90BA9");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Teacher"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("API.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Device")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("RoomCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Rooms__3214EC073B8FA24F");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("API.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("DayId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("StudyShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Schedule__3214EC0741018C97");

                    b.HasIndex(new[] { "ClassId" }, "IX_Schedules_ClassId");

                    b.HasIndex(new[] { "DayId" }, "IX_Schedules_DayId");

                    b.HasIndex(new[] { "RoomId" }, "IX_Schedules_RoomId");

                    b.HasIndex(new[] { "StudyShiftId" }, "IX_Schedules_StudyShiftId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("API.Models.StudentsInfor", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentsCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Students__1788CC4CCCC2035F");

                    b.ToTable("StudentsInfor", (string)null);
                });

            modelBuilder.Entity("API.Models.StudyShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("StudyShiftName")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Id")
                        .HasName("PK__StudyShi__3214EC07D946077D");

                    b.ToTable("StudyShifts");
                });

            modelBuilder.Entity("API.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfCredits")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Subjectcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Subjects__3214EC0741AE97DC");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("PassWordHash")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<bool?>("Statuss")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC079BED008F");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("API.Models.UserProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("FullName")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("UserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__UserProf__1788CC4C445D0929");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId")
                        .HasName("PK__RolePerm__6400A1A882414258");

                    b.HasIndex(new[] { "PermissionId" }, "IX_RolePermission_PermissionId");

                    b.ToTable("RolePermission", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 3
                        });
                });

            modelBuilder.Entity("StudentInClass", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassId", "StudentId")
                        .HasName("PK__StudentI__483575791F083B9F");

                    b.HasIndex(new[] { "StudentId" }, "IX_StudentInClass_StudentId");

                    b.ToTable("StudentInClass", (string)null);
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<Guid>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Roleid")
                        .HasColumnType("int");

                    b.HasKey("Userid", "Roleid")
                        .HasName("PK__UserRole__2F388C87DEAF1C0D");

                    b.HasIndex(new[] { "Roleid" }, "IX_UserRole_Roleid");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("API.Models.Attendance", b =>
                {
                    b.HasOne("API.Models.Schedule", "Schedules")
                        .WithMany("Attendances")
                        .HasForeignKey("SchedulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Attendanc__Sched__6477ECF3");

                    b.HasOne("API.Models.User", "User")
                        .WithMany("Attendances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Attendanc__UserI__656C112C");

                    b.Navigation("Schedules");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.AttendanceDetail", b =>
                {
                    b.HasOne("API.Models.Attendance", "Attendance")
                        .WithMany("AttendanceDetails")
                        .HasForeignKey("AttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Attendanc__Atten__6A30C649");

                    b.HasOne("API.Models.StudentsInfor", "Student")
                        .WithMany("AttendanceDetails")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Attendanc__Stude__693CA210");

                    b.Navigation("Attendance");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("API.Models.AttendanceDetailsComplaint", b =>
                {
                    b.HasOne("API.Models.Complaint", "Complaint")
                        .WithOne("AttendanceDetailsComplaint")
                        .HasForeignKey("API.Models.AttendanceDetailsComplaint", "ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__Compl__71D1E811");

                    b.HasOne("API.Models.Schedule", "Schedules")
                        .WithMany("AttendanceDetailsComplaints")
                        .HasForeignKey("SchedulesId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Attendanc__Sched__72C60C4A");

                    b.Navigation("Complaint");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("API.Models.Auditlog", b =>
                {
                    b.HasOne("API.Models.User", "PerformeByNavigation")
                        .WithMany("AuditlogPerformeByNavigations")
                        .HasForeignKey("PerformeBy")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__auditlog__Userid__50C3F9A6");

                    b.HasOne("API.Models.User", "User")
                        .WithMany("AuditlogUsers")
                        .HasForeignKey("Userid");

                    b.Navigation("PerformeByNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.Class", b =>
                {
                    b.HasOne("API.Models.Subject", "Subject")
                        .WithMany("Classes")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Classes_Subject");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("API.Models.ClassChange", b =>
                {
                    b.HasOne("API.Models.Complaint", "Complaint")
                        .WithOne("ClassChange")
                        .HasForeignKey("API.Models.ClassChange", "ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassChan__Compl__7A672E12");

                    b.HasOne("API.Models.Class", "CurrentClass")
                        .WithMany("ClassChangeCurrentClasses")
                        .HasForeignKey("CurrentClassId")
                        .HasConstraintName("FK__ClassChan__Curre__7B5B524B");

                    b.HasOne("API.Models.Class", "RequestedClass")
                        .WithMany("ClassChangeRequestedClasses")
                        .HasForeignKey("RequestedClassId")
                        .HasConstraintName("FK__ClassChan__Reque__7C4F7684");

                    b.Navigation("Complaint");

                    b.Navigation("CurrentClass");

                    b.Navigation("RequestedClass");
                });

            modelBuilder.Entity("API.Models.Complaint", b =>
                {
                    b.HasOne("API.Models.User", "ProcessedByNavigation")
                        .WithMany("ComplaintProcessedByNavigations")
                        .HasForeignKey("ProcessedBy")
                        .HasConstraintName("FK__Complaint__Proce__6EF57B66");

                    b.HasOne("API.Models.User", "Student")
                        .WithMany("ComplaintStudents")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Complaint__Stude__6D0D32F4");

                    b.Navigation("ProcessedByNavigation");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("API.Models.Schedule", b =>
                {
                    b.HasOne("API.Models.Class", "Class")
                        .WithMany("Schedules")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Schedules__Class__5EBF139D");

                    b.HasOne("API.Models.DayOfWeekk", "Day")
                        .WithMany("Schedules")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Schedules__DayId__60A75C0F");

                    b.HasOne("API.Models.Room", "Room")
                        .WithMany("Schedules")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Schedules__RoomI__5FB337D6");

                    b.HasOne("API.Models.StudyShift", "StudyShift")
                        .WithMany("Schedules")
                        .HasForeignKey("StudyShiftId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Schedules__Study__619B8048");

                    b.Navigation("Class");

                    b.Navigation("Day");

                    b.Navigation("Room");

                    b.Navigation("StudyShift");
                });

            modelBuilder.Entity("API.Models.StudentsInfor", b =>
                {
                    b.HasOne("API.Models.User", "User")
                        .WithOne("StudentsInfor")
                        .HasForeignKey("API.Models.StudentsInfor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentsI__UserI__52593CB8");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.UserProfile", b =>
                {
                    b.HasOne("API.Models.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("API.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserProfi__UserI__46E78A0C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RolePermission", b =>
                {
                    b.HasOne("API.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RolePermi__Permi__3C69FB99");

                    b.HasOne("API.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RolePermi__RoleI__3B75D760");
                });

            modelBuilder.Entity("StudentInClass", b =>
                {
                    b.HasOne("API.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentIn__Class__5535A963");

                    b.HasOne("API.Models.StudentsInfor", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentIn__Stude__5629CD9C");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("API.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("Roleid")
                        .IsRequired()
                        .HasConstraintName("FK__UserRole__Roleid__440B1D61");

                    b.HasOne("API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserRole__Userid__4316F928");
                });

            modelBuilder.Entity("API.Models.Attendance", b =>
                {
                    b.Navigation("AttendanceDetails");
                });

            modelBuilder.Entity("API.Models.Class", b =>
                {
                    b.Navigation("ClassChangeCurrentClasses");

                    b.Navigation("ClassChangeRequestedClasses");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("API.Models.Complaint", b =>
                {
                    b.Navigation("AttendanceDetailsComplaint");

                    b.Navigation("ClassChange");
                });

            modelBuilder.Entity("API.Models.DayOfWeekk", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("API.Models.Room", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("API.Models.Schedule", b =>
                {
                    b.Navigation("AttendanceDetailsComplaints");

                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("API.Models.StudentsInfor", b =>
                {
                    b.Navigation("AttendanceDetails");
                });

            modelBuilder.Entity("API.Models.StudyShift", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("API.Models.Subject", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("AuditlogPerformeByNavigations");

                    b.Navigation("AuditlogUsers");

                    b.Navigation("ComplaintProcessedByNavigations");

                    b.Navigation("ComplaintStudents");

                    b.Navigation("StudentsInfor");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
